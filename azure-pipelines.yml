trigger:
- '*'

pool: 'MyDevOpsVMs'
#  vmImage: 'ubuntu-20.04'
#  demands:
#  - npm

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '5.x'


steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

# - task: NuGetToolInstaller@0
#   inputs:
#     versionSpec: '5.9.1'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: NuGetCommand@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    feedsToUse: 'select'
    vstsFeed: 'SpaceGame-Web-Dependencies/Tailspin.SpaceGame.Web.Models'
    includeNuGetOrg: false
    restoreSolution: '**/*.sln'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    zipAfterPublish: true

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)'
    customCommand: 'install handlebars'

- task: XplatGenerateReleaseNotes@3
  inputs:
    outputfile: '$(Build.ArtifactStagingDirectory)/releasenotes.md'
    templateLocation: 'File'
    templatefile: '$(System.DefaultWorkingDirectory)/gitflow-template.hbs'
    customHandlebarsExtensionFile: 'custom.js'
    customHandlebarsExtensionFolder: '$(System.DefaultWorkingDirectory)'

# Generate Release Notes (Crossplatform)
# Description - Generates a release notes file in a format of your choice from the build or release history
# - task: XplatGenerateReleaseNotes@3
#   inputs: 
#      # Required arguments
#      outputfile: "rn.md"
#      templateLocation: File
#      templatefile: 
#      inlinetemplate: 
#      dumpPayloadToConsole: false
#      dumpPayloadToFile: false
#      replaceFile: True
#      appendToFile: True
#      getParentsAndChildren: False
#      getAllParents: False
#      getIndirectPullRequests: False
#      stopOnError: False
#      considerPartiallySuccessfulReleases: False
#      checkForManuallyLinkedWI: False

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()
